#Problem: https://www.codechef.com/problems/MINBEAUTY

#Solution:
# cook your dish here
import bisect

for _ in range(int(input())):
    N = int(input())
    A = sorted(list(map(int, input().split())))
    N = len(A)
    b = float('inf')
    #time complexity O(n^2 log(n))
    for i in range(N):
        if b == 0: break
        for j in range(i+1, N):
            goal = A[j] + (A[j] - A[i])
            x = bisect.bisect_right(A, goal)
            if x == N:
                if j != N-1:
                    b = min(b, abs(A[i] + A[j] + A[x - 1] - 3 * A[j]))

            else:
                if (x-1) > j:
                    b = min(b, abs(A[i] + A[j] + A[x - 1] - 3 * A[j]))
                if x > j:
                    b = min(b, abs(A[i] + A[j] + A[x] - 3 * A[j]))
    print(b)

    # i = min
    # j = mid
    # goal = max
